% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psut.R
\name{prep_psut}
\alias{prep_psut}
\title{Prepare for PSUT analysis}
\usage{
prep_psut(
  .tidy_iea_df,
  ledger_side = IEATools::iea_cols$ledger_side,
  flow_aggregation_point = IEATools::iea_cols$flow_aggregation_point,
  flow = IEATools::iea_cols$flow,
  product = IEATools::iea_cols$product,
  e_dot = IEATools::iea_cols$e_dot,
  unit = IEATools::iea_cols$unit,
  supply = IEATools::ledger_sides$supply,
  consumption = IEATools::ledger_sides$consumption,
  matnames = IEATools::mat_meta_cols$matnames,
  rownames = IEATools::mat_meta_cols$rownames,
  colnames = IEATools::mat_meta_cols$colnames,
  rowtypes = IEATools::mat_meta_cols$rowtypes,
  coltypes = IEATools::mat_meta_cols$coltypes,
  matvals = IEATools::psut_cols$matvals
)
}
\arguments{
\item{.tidy_iea_df}{a tidy data frame that has been specified with \code{specify_all()}.}

\item{ledger_side, flow_aggregation_point, flow, product, e_dot, unit}{See \code{IEATools::iea_cols}.}

\item{supply, consumption}{See \code{IEATools::ledger_sides}.}

\item{matnames, rownames, colnames, rowtypes, coltypes}{See \code{IEATools::mat_meta_cols}.}

\item{matvals}{See \code{IEATools::psut_cols}.}
}
\value{
a tidy PSUT data frame
}
\description{
Converts a tidy IEA data frame into a PSUT data frame
by collapsing the IEA data into PSUT matrices (R, U, V, and Y).
}
\details{
This function bundles several others:
\enumerate{
\item \code{add_psut_matnames()}
\item \code{add_row_col_meta()}
\item \code{collapse_to_tidy_psut()}
}

Furthermore, it extracts \code{S_units} matrices using \code{extract_S_units_from_tidy()}
and adds those matrices to the data frame.
}
\examples{
library(dplyr)
library(tidyr)
Simple <- load_tidy_iea_df() \%>\% 
  specify_all() \%>\% 
  prep_psut() \%>\% 
  rename(matval_simple = matvals)
S_units <- load_tidy_iea_df() \%>\% 
  extract_S_units_from_tidy()
Complicated <- load_tidy_iea_df() \%>\% 
  specify_all() \%>\% 
  add_psut_matnames() \%>\% 
  add_row_col_meta() \%>\% 
  collapse_to_tidy_psut() \%>\% 
  spread(key = matnames, value = matvals) \%>\% 
  full_join(S_units, by = c("Method", "Energy.type", "Last.stage", 
                            "Country", "Year")) \%>\% 
  gather(key = matnames, value = matvals, R, U_EIOU, U_excl_EIOU, 
                                        V, Y, S_units) \%>\% 
  rename(matval_complicated = matvals)
# Simple and Complicated are same.
full_join(Simple, Complicated, by = c("Method", "Energy.type", 
                                      "Last.stage", "Country", 
                                      "Year", "matnames")) \%>\% 
  dplyr::mutate(
    same = matsbyname::equal_byname(matval_simple, matval_complicated)
  ) \%>\% 
  magrittr::extract2("same") \%>\% 
  as.logical() \%>\% 
  all()
}
