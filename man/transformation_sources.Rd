% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specify.R
\name{transformation_sources}
\alias{transformation_sources}
\title{Find transformation sources}
\usage{
transformation_sources(.tidy_iea_df,
  flow_aggregation_point = "Flow.aggregation.point",
  transformation_processes = "Transformation processes",
  eiou = "Energy industry own use", flow = "Flow",
  product = "Product", e_dot = "E.dot", grouping_vars = c("Method",
  "Last.stage", "Country", "Year", "Energy.type"))
}
\arguments{
\item{.tidy_iea_df}{a tidy data frame containing IEA extended energy balance data}

\item{flow_aggregation_point}{the name of the flow aggregation point column in \code{.tidy_iea_df}. Default is "\code{Flow.aggregation.point}".}

\item{transformation_processes}{a string that identifies transformation processes in the \code{flow_aggregation_point} column. Default is "\code{Transformation processes}".}

\item{eiou}{a string that identifies energy industry own use in the \code{flow_aggregation_point} column. Default is "\code{Energy industry own use}".}

\item{flow}{the name of the flow column in \code{.tidy_iea_df}. Default is "\code{Flow}".}

\item{product}{the name of the product column in \code{.tidy_iea_df}. Default is "\code{Product}".}

\item{e_dot}{the name of the energy rate column in \code{.tidy_iea_df}. Default is "\code{E.dot}".}

\item{grouping_vars}{a string vector of column names by which \code{.tidy_iea_df} will be grouped before finding transformation sinks. Default is \code{c("Method", "Last.stage", "Country", "Year", "Energy.type")}.}
}
\value{
the \code{grouping_vars} and the \code{flow} column,
with one row for each industry that is a transformation source.
Industries that are transformation sources are named in the \code{flow} column.
}
\description{
In the IEA extended energy balance data,
transformation processes ought to both consume and produce energy.
But some transformation processes produce energy without consuming any energy.
Those transformation processes can be called "transformation sources."
This function finds and identifies industries that act as transformation sources.
}
\details{
It is important to identify transformation sources,
because they cause problems for physical supply-use table (PSUT) analysis.
In particular, when swimming upstream, a PSUT analysis will "see" the energy sources,
but might not see the associated primary energy carriers associated with the sourced energy.

Transformation sources are identified by the following algorithm:
\enumerate{
\item Identify (per group in \code{.tidy_iea_df}) all \code{Transformation processes} that consume energy (negative value for \code{E.dot}).
Energy consumption can be for the transformation process itself or for Energy industry own use.
\item Identify (per group in \code{.tidy_iea_df}) all \code{Transformation processes} that produce energy (positive value for \code{E.dot}).
\item Take the set difference between the two (producers less consumers).
The set difference is the list of transformation sources.
}

\code{\link[=transformation_sources]{transformation_sources()}} is a function not unlike \code{\link[dplyr:summarise]{dplyr::summarise()}};
it returns a summary containing grouping variables and industries that are transformation sources.
So be sure to specify (or accept with the defaults)
the \code{grouping_vars} argument.
Typical grouping variables are \code{Method}, \code{Last.stage}, \code{Country}, \code{Year}, \code{Energy.type}.
Don't group on \code{Flow.aggregation.point}, because energy from different aggregation points
(\code{Energy industry own use} and \code{Transformation processes}) flows into each machine.
Don't group on \code{Flow}, \code{Product}, or \code{E.dot}, either.
If groups are not set,
\code{flow}s will be analyzed together, possibly leading to missed transformation sinks.

The various \code{specify_*()} functions should also be called \emph{before} calling \code{\link[=transformation_sources]{transformation_sources()}}.
The \code{specify_*()} functions clean up the IEA data, ensuring that energy is routed to the right places.

Note that this function only identifies the problem of transformation sources;
it does not fix the problems.
}
\examples{
library(dplyr)
load_tidy_iea_df() \%>\% 
  specify_primary_production() \%>\% 
  specify_interface_industries() \%>\% 
  specify_tp_eiou() \%>\% 
  transformation_sources()
}
