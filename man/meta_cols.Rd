% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{meta_cols}
\alias{meta_cols}
\title{Find metadata columns}
\usage{
meta_cols(
  .df,
  not_meta = IEATools::iea_cols$e_dot,
  years_to_keep = NULL,
  return_names = FALSE
)
}
\arguments{
\item{.df}{A (possibly) non-tidy data frame with years spread to the right in columns.}

\item{not_meta}{A vector of column names or position integers identifying columns to \emph{not}
include in the return value.
Default is \code{IEATools::iea_cols$e_dot}.}

\item{years_to_keep}{A vector of years to retain. Default is \code{NULL}, which eliminates all year columns.}

\item{return_names}{A boolean which tells whether names are returned instead of column indices.
Default is \code{FALSE}.}
}
\value{
A vector of string names of metadata columns in \code{.df}.
}
\description{
Determines which columns are metadata columns in an IEA data frame
by subtracting year columns and \code{cols_to_exclude} from all columns names in \code{.df}.
}
\details{
A non-tidy data frame will have an \code{e_dot} column, which is not a metadata column.
Thus, the default value for \code{not_meta} is \code{IEATools::iea_cols$e_dot}.
Overriding \code{not_meta} will change the default behavior to exclude different columns.
}
\examples{
DF <- data.frame(E.dot = 2020, a = c(1, 2), `1967` = c(3, 4), `-42` = c(5, 6), check.names = FALSE)
DF \%>\% meta_cols()
DF \%>\% meta_cols(return_names = TRUE)
}
