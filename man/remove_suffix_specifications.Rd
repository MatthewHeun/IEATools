% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specify.R
\name{remove_suffix_specifications}
\alias{remove_suffix_specifications}
\title{Remove specification suffixes from a column}
\usage{
remove_suffix_specifications(
  .df,
  col,
  unsuffixed_col,
  notations = list(RCLabels::of_notation, RCLabels::from_notation)
)
}
\arguments{
\item{.df}{The data frame in which \code{col} exists.}

\item{col}{The string name of the column in \code{.df} to be de-specified.}

\item{unsuffixed_col}{The string name of the column in the output data frame to contain the un-suffixed version of \code{col}.}

\item{notations}{The notations used for row and column names. See \code{matsbyname::notation_vec()}.
Default is \code{list(RCLabels::of_notation, RCLabels::from_notation)},
because both \code{RCLabels::of_notation} and \code{RCLabels::from_notation} can be used in the \code{Flow} column
of an IEA data frame.}
}
\value{
A version of \code{.df} with suffixes removed from the \code{col} column and the result placed in the \code{despecified_col} column.
}
\description{
\code{Flow} and \code{Product} columns of IEA data frames may have been "specified"
to contain a suffix of the form " [of Natural gas\"], for example.
This function strips away the suffix.

Identification of parenthetical notation delimiters is determined by the \code{notations} argument.
}
\examples{
library(dplyr)
load_tidy_iea_df() \%>\% 
  specify_all() \%>\% 
  remove_suffix_specifications(col = "Flow", unsuffixed_col = "clean_Flow") \%>\% 
  select(Flow, Product, Edot, clean_Flow) \%>\% 
  filter(endsWith(Flow, RCLabels::bracket_notation[["suff_end"]]))
}
