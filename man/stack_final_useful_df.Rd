% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/final_to_useful.R
\name{stack_final_useful_df}
\alias{stack_final_useful_df}
\title{Clean and pivot useful data frame}
\usage{
stack_final_useful_df(
  .useful_df,
  .sutdata,
  last_stage = IEATools::iea_cols$last_stage,
  useful = IEATools::last_stages$useful,
  .sep = "_",
  C_eiou = IEATools::template_cols$C_eiou,
  C_Y = IEATools::template_cols$C_Y,
  eta_fu = IEATools::template_cols$eta_fu,
  phi_u = IEATools::template_cols$phi_u,
  U_feed_name = IEATools::psut_cols$U_feed,
  U_eiou_name = IEATools::psut_cols$U_eiou,
  U_name = IEATools::psut_cols$U,
  r_eiou_name = IEATools::psut_cols$r_eiou,
  V_name = IEATools::psut_cols$V,
  Y_name = IEATools::psut_cols$Y
)
}
\arguments{
\item{.useful_df}{A data frame created by \code{extend_to_useful()}.}

\item{.sutdata}{The original input to \code{extend_to_useful()}.}

\item{last_stage}{See \code{IEATools::iea_cols$last_stage}.}

\item{useful}{See \code{IEATools::last_stages}.}

\item{.sep}{A separator between matrix names and \code{final} or \code{useful} indicators. Default is "_".}

\item{C_eiou, C_Y, eta_fu, phi_u}{See \code{IEATools::template_cols}.
These should be strings (if \code{.sutdata} is a data frame or a list)
or individual matrices (if \code{.sutdata} is \code{NULL}).}

\item{U_eiou_name, U_feed_name, U_name, r_eiou_name, V_name, Y_name}{See \code{IEATools::psut_cols}.
Distinct from \code{U_feed},\code{U_eiou}, \code{U}, \code{r_eiou}, \code{V}, and \code{Y} (which can be matrices or strings),
these variables determine the names of these matrices on output.
Default values are taken from \code{IEATools::psut_cols}.
Note that \code{.sep} and \code{useful} are appended to the strings in \code{U_eiou_name} ... \code{Y_name}
to form the output names.}
}
\value{
A nicer form of useful energy and exergy data.
}
\description{
After a call to \code{extend_to_useful()},
the resulting data frame is not in a great shape.
This function gathers (via \code{tidyr::pivot_longer()})
and stacks the useful data beneath the final data.
}
\examples{
C_data <- load_fu_allocation_data() \%>\% 
  form_C_mats()
eta_fu_data <- load_eta_fu_data() \%>\% 
  form_eta_fu_phi_u_vecs()
m_cols <- eta_fu_data \%>\% 
  IEATools::meta_cols(return_names = TRUE,
                      years_to_keep = IEATools::iea_cols$year,
                      not_meta = c(IEATools::template_cols$eta_fu,
                                   IEATools::template_cols$phi_u))
psut_mats <- load_tidy_iea_df() \%>\% 
  specify_all() \%>\% 
  prep_psut()
extended_to_useful <- psut_mats |> 
  dplyr::full_join(C_data, by = m_cols) \%>\% 
  dplyr::full_join(eta_fu_data, by = m_cols) |> 
  extend_to_useful()
stack_final_useful_df(extended_to_useful, psut_mats)
}
