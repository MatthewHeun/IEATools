% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{year_cols}
\alias{year_cols}
\title{Find year columns}
\usage{
year_cols(.df, year_pattern = "^-?\\\\d+$", return_names = FALSE)
}
\arguments{
\item{.df}{a non-tidy data frame with years spread to the right in columns.}

\item{year_pattern}{a regex pattern that identifies years. Default is "\verb{^-?\\\\d+$}".}

\item{return_names}{a boolean which tells whether names are returned instead of column indices.
Default is \code{FALSE}.}
}
\value{
a vector of column indices (when \code{return_names = FALSE}, the default) or a vector of column names (when \code{return_names = TRUE})
for those columns that represent years.
}
\description{
It is sometimes helpful to know which columns are years.
This function returns a set of indices
(or, optionally, the names) of columns in \code{.fu_df} that represent years.
}
\details{
The default \code{year_pattern} is "\verb{^-?\\\\d+$}", which matches columns whose names
have zero or one negative signs followed by any number of digits.
}
\examples{
DF <- data.frame(a = c(1, 2), `1967` = c(3, 4), `-10` = c(5, 6), check.names = FALSE)
DF \%>\% year_cols()
DF \%>\% year_cols(return_names = TRUE)
}
