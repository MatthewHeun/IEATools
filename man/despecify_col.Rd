% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specify.R
\name{despecify_col}
\alias{despecify_col}
\title{Remove specification strings from a column}
\usage{
despecify_col(
  .df,
  col,
  despecified_col,
  notations = list(RCLabels::of_notation, RCLabels::from_notation),
  production = IEATools::tpes_flows$production,
  resources = IEATools::tpes_flows$resources
)
}
\arguments{
\item{.df}{The data frame in which \code{col} exists.}

\item{col}{The string name of the column in \code{.df} to be de-specified.}

\item{despecified_col}{The string name of the column in the output data frame to contain the de-specified version of \code{col}.}

\item{notations}{The notations used for row and column names. See \code{matsbyname::notation_vec()}.
Default is \code{list(RCLabels::of_notation, RCLabels::from_notation)},
because both \code{RCLabels::of_notation} and \code{RCLabels::from_notation} can be used in the \code{Flow} column
of an IEA data frame.}

\item{production, resources}{See \code{IEATools::tpes_flows}.}
}
\value{
A de-specified version of \code{.df} and the result placed in the \code{despecified_col} column.
}
\description{
\code{Flow} and \code{Product} columns of IEA data frames may have been "specified"
with one of the functions of \code{specify_all()}.
The specifying makes it difficult to sort the columns in IEA order (with \code{sort_iea_df()}),
as the \code{Flow} and \code{Product} columns now contain non-IEA flows and products.
To enable sorting, this function de-specifies a column in \code{.df}.
}
\details{
De-specifying includes the following changes:
* Any "Resource" flows are replaced by "Production". E.g., "Resources [of Coal]" becomes "Production".
* All parenthetical decorations are removed.  E.g., "Other bituminous coal [of Coal mines]" becomes "Other bituminous coal".

Identification of parenthetical notation delimiters is determined by a notation object.
}
\examples{
library(dplyr)
load_tidy_iea_df() \%>\% 
  specify_all() \%>\% 
  despecify_col(col = "Flow", despecified_col = "clean_Flow") \%>\% 
  select(Flow, Product, E.dot, clean_Flow) \%>\% 
  filter(endsWith(Flow, RCLabels::bracket_notation[["suff_end"]]))
}
