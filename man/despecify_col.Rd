% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specify.R
\name{despecify_col}
\alias{despecify_col}
\title{Remove specification strings from a column}
\usage{
despecify_col(.df, col, despecified_col)
}
\arguments{
\item{.df}{the data frame in which \code{col} exists}

\item{col}{the string name of the column in \code{.df} to be de-specified}

\item{despecified_col}{the string name of the column in \code{.df} to contain the de-specified version of \code{col}}
}
\value{
a de-specified version of \code{.data}
}
\description{
\code{Flow} and \code{Product} columns of IEA data frames may have been "specified"
with one of the functions of \code{specify_all()}.
The specifying makes it difficult to sort the columns in IEA order (with \code{sort_iea_df()}),
as the \code{Flow} and \code{Product} columns now contain non-IEA flows and products.
To enable sorting, this function de-specifies a column in \code{.df}.
}
\details{
De-specifying includes the following changes:
* Any "Resource" flows are replaced by "Production". E.g., "Resources \link{Coal}" becomes "Production".
* All parenthetical decorations are removed.  E.g., "Other bituminous coal \link{of Coal mines}" becomes "Other bituminous coal".

Identification of parenthetical notation delimiters is determined by the \code{specify_notation} object of this package.
}
\examples{
library(dplyr)
load_tidy_iea_df() \%>\% 
  specify_all() \%>\% 
  despecify_col(col = "Flow", despecified_col = "clean_Flow") \%>\% 
  select(Flow, Product, E.dot, clean_Flow) \%>\% 
  filter(endsWith(Flow, specify_notation$close))
}
