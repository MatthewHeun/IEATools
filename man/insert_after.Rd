% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{insert_after}
\alias{insert_after}
\title{Insert after an item in a list}
\usage{
insert_after(x, after = NULL, values, .after_all = TRUE,
  .equals_function = `==`)
}
\arguments{
\item{x}{a list into which \code{values} is to be inserted}

\item{after}{the object in \code{x} after which \code{after} will be inserted}

\item{values}{the object to be inserted into \code{x}}

\item{.after_all}{a boolean telling whether to insert \code{values} after after all instances of \code{after} (when \code{TRUE}, the defaul)
or only the first instance of \code{after} (when \code{FALSE}).}

\item{.equals_function}{insertion of \code{values} occurs at \code{which(.equals_function(x, after))}.
Default is \code{==}.}
}
\value{
a modified version of \code{x}
}
\description{
It is often helpful to insert an item into a list
after another known item rather than at an index of the list as \code{base::append()} does.
This function provides that functionality.
}
\details{
If there are multiple copies of \code{after} in \code{x},
\code{values} is inserted after each \code{after}, unless \code{.after_all = FALSE}.

The positions at which insertions will occur are determined by the \code{==} operator.
I.e., \code{values} are inserted in \code{x} after each position in \code{x} where \code{x == after} is true.

Note that \code{length(after)} must be 1.

If \code{is.null(after)}, \code{values} is inserted once at the end of the list.
}
\examples{
insert_after(list("a", "b", "c", "d", "c"), after = "c", values = "1")
}
